<?xml version="1.0" encoding="UTF-8"?>
<!--
| deployerConfigContext.xml centralizes into one file some of the declarative configuration that
| all CAS deployers will need to modify.
|
| This file declares some of the Spring-managed JavaBeans that make up a CAS deployment.
| The beans declared in this file are instantiated at context initialization time by the Spring
| ContextLoaderListener declared in web.xml.  It finds this file because this
| file is among those declared in the context parameter "contextConfigLocation".
|
| By far the most common change you will need to make in this file is to change the last bean
| declaration to replace the default authentication handler with
| one implementing your approach for authenticating usernames and passwords.
+-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:ldaptive="http://www.ldaptive.org/schema/spring-ext"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.ldaptive.org/schema/spring-ext http://www.ldaptive.org/schema/spring-ext.xsd" >


    <util:map id="authenticationHandlersResolvers">
        <entry key-ref="proxyAuthenticationHandler" value-ref="proxyPrincipalResolver" />
        <entry key-ref="primaryAuthenticationHandler" value-ref="primaryPrincipalResolver" />
    </util:map>

    <util:list id="authenticationMetadataPopulators">
        <ref bean="successfulHandlerMetaDataPopulator" />
        <ref bean="rememberMeAuthenticationMetaDataPopulator" />
    </util:list>

    <alias name="ldapAuthenticationHandler" alias="primaryAuthenticationHandler" />
    <alias name="personDirectoryPrincipalResolver" alias="primaryPrincipalResolver" />

    <bean id="ldapAuthenticationHandler"
          class="org.jasig.cas.authentication.LdapAuthenticationHandler"
          p:principalIdAttribute="cn"
          c:authenticator-ref="authenticator">
        <property name="principalAttributeMap">
            <map>
            </map>
        </property>
    </bean>

    <bean id="attributeRepository"
          class="org.jasig.services.persondir.support.ldap.LdaptivePersonAttributeDao"
          p:connectionFactory-ref="ldap.connection.factory.pooled"
          p:baseDN="ou=sso,ou=account,dc=ccci,dc=org"
          p:searchControls-ref="searchControls"
          p:searchFilter="cn={0}">
        <property name="resultAttributeMapping">
            <map>
                <!--
                   | Key is LDAP attribute name, value is principal attribute name.
                   -->
                <entry key="relayGuid" value="ssoGuid" />
                <entry key="cn" value="email" />
                <entry key="givenName" value="firstName" />
                <entry key="sn" value="lastName" />
            </map>
        </property>
    </bean>

    <bean id="searchControls"
          class="javax.naming.directory.SearchControls"
          p:searchScope="1"
          p:countLimit="2" />

    <!-- start ldap connection pool configuration -->

    <bean id="ldap.connection.factory.pooled" class="org.ldaptive.pool.PooledConnectionFactory"
          p:connectionPool-ref="ldap.connection.pool" />

    <bean id="ldap.connection.factory" class="org.ldaptive.DefaultConnectionFactory">
        <property name="connectionConfig">
            <bean parent="ldap.config.connection">
                <property name="connectionInitializer">
                    <bean class="org.ldaptive.BindConnectionInitializer"
                          p:bindDn="${connection.pool.ldap.userdn}">
                        <property name="bindCredential">
                            <bean class="org.ldaptive.Credential">
                                <constructor-arg index="0" value="${connection.pool.ldap.password}" />
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="ldap.config.connection" class="org.ldaptive.ConnectionConfig"
          p:ldapUrl="${connection.pool.ldap.url}"
          p:useSSL="${connection.pool.use.ssl}"
          p:sslConfig-ref="ldap.config.ssl"
          p:connectTimeout="${connection.pool.ldap.timeout.connect}"
          p:responseTimeout="${connection.pool.ldap.timeout.response}" />

    <bean id="ldap.config.pool" class="org.ldaptive.pool.PoolConfig"
          p:minPoolSize="${ldap.pool.minSize:3}"
          p:maxPoolSize="${ldap.pool.maxSize:10}"
          p:validateOnCheckIn="${ldap.pool.validateOnCheckin:false}"
          p:validateOnCheckOut="${ldap.pool.validateOnCheckout:false}"
          p:validatePeriodically="${ldap.pool.validatePeriodically:true}"
          p:validatePeriod="${ldap.pool.validatePeriod:1800}" />

    <bean id="ldap.connection.pool" class="org.ldaptive.pool.BlockingConnectionPool" init-method="initialize"
          destroy-method="close"
          p:blockWaitTime="${ldap.pool.blockWaitTime:30000}"
          p:connectionFactory-ref="ldap.connection.factory"
          p:failFastInitialize="false"
          p:poolConfig-ref="ldap.config.pool">
        <property name="validator">
            <bean class="org.ldaptive.pool.SearchValidator" />
        </property>
        <property name="pruneStrategy">
            <bean class="org.ldaptive.pool.IdlePruneStrategy"
                  p:prunePeriod="${ldap.pool.prunePeriod:300}"
                  p:idleTime="${ldap.pool.idleTime:600}" />
        </property>
    </bean>

    <bean id="ldap.config.ssl" class="org.ldaptive.ssl.SslConfig">
        <property name="credentialConfig">
            <bean class="org.ldaptive.ssl.KeyStoreCredentialConfig"
                  p:trustStore="${ldap.cert.keystore:#{null}}" />
        </property>
    </bean>

    <!-- end ldap connection pool configuration -->

    <ldaptive:direct-authenticator id="authenticator"
                                   format="cn=%s,ou=sso,ou=account,dc=ccci,dc=org"
                                   ldapUrl="${ldap.url}"
                                   connectTimeout="${ldap.connectTimeout}"
                                   validateOnCheckOut="${ldap.pool.validateOnCheckout}"
                                   failFastInitialize="true"
                                   blockWaitTime="${ldap.pool.blockWaitTime}"
                                   idleTime="${ldap.pool.idleTime}"
                                   usePasswordPolicy="${ldap.usePpolicy:false}"
                                   maxPoolSize="${ldap.pool.maxSize}"
                                   minPoolSize="${ldap.pool.minSize}"
                                   validatePeriodically="${ldap.pool.validatePeriodically}"
                                   validatePeriod="${ldap.pool.validatePeriod}"
                                   prunePeriod="${ldap.pool.prunePeriod}"
                                   useSSL="${ldap.use.ssl:false}"
                                   useStartTLS="${ldap.useStartTLS}" />

    <util:map id="attrRepoBackingMap">
        <entry key="uid" value="uid" />
        <entry key="eduPersonAffiliation" value="eduPersonAffiliation" />
        <entry key="groupMembership" value="groupMembership" />
        <entry>
            <key><value>memberOf</value></key>
            <list>
                <value>faculty</value>
                <value>staff</value>
                <value>org</value>
            </list>
        </entry>
    </util:map>

    <alias name="serviceThemeResolver" alias="themeResolver" />

    <alias name="jsonServiceRegistryDao" alias="serviceRegistryDao" />

    <alias name="defaultTicketRegistry" alias="ticketRegistry" />

    <alias name="ticketGrantingTicketExpirationPolicy" alias="grantingTicketExpirationPolicy" />
    <alias name="multiTimeUseOrTimeoutExpirationPolicy" alias="serviceTicketExpirationPolicy" />

    <alias name="anyAuthenticationPolicy" alias="authenticationPolicy" />
    <alias name="acceptAnyAuthenticationPolicyFactory" alias="authenticationPolicyFactory" />

    <bean id="auditTrailManager"
          class="org.jasig.inspektr.audit.support.Slf4jLoggingAuditTrailManager"
          p:entrySeparator="${cas.audit.singleline.separator:|}"
          p:useSingleLine="${cas.audit.singleline:false}"/>

    <alias name="neverThrottle" alias="authenticationThrottle" />

    <util:list id="monitorsList">
        <ref bean="memoryMonitor" />
        <ref bean="sessionMonitor" />
    </util:list>

    <alias name="defaultPrincipalFactory" alias="principalFactory" />
    <alias name="defaultAuthenticationTransactionManager" alias="authenticationTransactionManager" />
    <alias name="defaultPrincipalElectionStrategy" alias="principalElectionStrategy" />
</beans>